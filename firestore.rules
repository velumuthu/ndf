rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAdmin() {
      // Check if the user's email is in the admin role document.
      // Use exists() to prevent errors if the document or field doesn't exist.
      return exists(/databases/$(database)/documents/roles/admin) &&
             get(/databases/$(database)/documents/roles/admin).data.emails.has(request.auth.token.email);
    }

    // Products: Everyone can read, only admins can write/delete
    match /products/{productId} {
      allow read: if true;
      allow write, delete: if isAdmin();
    }

    // Offers: Everyone can read, only admins can write/delete
    match /offers/{offerId} {
      allow read: if true;
      allow write, delete: if isAdmin();
    }

    // Orders: Users can create their own orders, but not view others'
    match /orders/{orderId} {
      allow read, write: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow create: if request.auth != null;
    }
    
    // Bulk Orders: Logged-in users can create, admins can read/delete
    match /bulk-orders/{orderId} {
      allow create: if request.auth != null;
      allow read, delete: if isAdmin();
    }

    // Roles: Admins can manage roles.
    // A special rule allows any authenticated user to create the initial 'admin' document.
    match /roles/{role} {
       allow read, write: if isAdmin();
       // Allow creating the admin document if it does not exist yet.
       // This is for the initial setup.
       allow create: if role == 'admin' && request.auth != null && !exists(/databases/$(database)/documents/roles/admin);
    }
  }
}
